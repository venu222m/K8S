| Reason                                        | Explanation                                                                                                                                                                                                                 |
| --------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| **1. Secrets never stored in Kubernetes API** | The CSI driver mounts secrets **directly from AWS Secrets Manager** at pod runtime. They’re not copied into a Kubernetes `Secret`, so even if your cluster is compromised, secrets aren’t exposed via `kubectl get secret`. |
| **2. Least privilege with IRSA**              | Each app/service can have its own **IAM role** that grants read access to only the secrets it needs. You don’t rely on node-level IAM roles.                                                                                |
| **3. Auto rotation support**                  | If secrets are rotated in AWS Secrets Manager (e.g., DB password), the CSI driver can **auto refresh** them in the pod without redeploying.                                                                                 |
| **4. AWS-native integration**                 | Managed by AWS; officially supported; aligns with AWS security best practices.                                                                                                                                              |
| **5. Audit trail**                            | AWS CloudTrail logs every `GetSecretValue` call, so you can audit which pod accessed what and when.                                                                                                                         |

